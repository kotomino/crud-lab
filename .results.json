{
  "stats": {
    "suites": 7,
    "tests": 25,
    "passes": 24,
    "pending": 0,
    "failures": 1,
    "start": "2021-04-02T03:47:16.579Z",
    "end": "2021-04-02T03:47:16.972Z",
    "duration": 393
  },
  "tests": [
    {
      "title": "has an text input field",
      "fullTitle": "RestaurantInput has an text input field",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an initial state with text key set to empty string",
      "fullTitle": "RestaurantInput has an initial state with text key set to empty string",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "changes the component state with an onChange event",
      "fullTitle": "RestaurantInput changes the component state with an onChange event",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "updates the state of the store after submitting the form",
      "fullTitle": "RestaurantInput updates the state of the store after submitting the form",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "displays a list of restaurant components",
      "fullTitle": "Restaurants Component displays a list of restaurant components",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "displays the appropriate text",
      "fullTitle": "Restaurant Component displays the appropriate text",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders an li",
      "fullTitle": "Restaurant Component renders an li",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an unique id property for each element",
      "fullTitle": "RestaurantInput Component with Redux has an unique id property for each element",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has the restaurant as a prop",
      "fullTitle": "Restaurant Component with Redux has the restaurant as a prop",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a button that dispatches a DELETE_RESTAURANT action with the proper id when clicked",
      "fullTitle": "Restaurant Component with Redux has a button that dispatches a DELETE_RESTAURANT action with the proper id when clicked",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "updates the state of the store to remove the component",
      "fullTitle": "Restaurant Component with Redux updates the state of the store to remove the component",
      "duration": 35,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'filter' of undefined\n    at Reviews.render (src/components/reviews/Reviews.js:8:39)\n    at finishClassComponent (node_modules/react-dom/cjs/react-dom.development.js:13194:31)\n    at updateClassComponent (node_modules/react-dom/cjs/react-dom.development.js:13156:10)\n    at beginWork (node_modules/react-dom/cjs/react-dom.development.js:13825:14)\n    at performUnitOfWork (node_modules/react-dom/cjs/react-dom.development.js:15864:12)\n    at workLoop (node_modules/react-dom/cjs/react-dom.development.js:15903:24)\n    at renderRoot (node_modules/react-dom/cjs/react-dom.development.js:15943:7)\n    at performWorkOnRoot (node_modules/react-dom/cjs/react-dom.development.js:16561:22)\n    at performWork (node_modules/react-dom/cjs/react-dom.development.js:16483:7)\n    at performSyncWork (node_modules/react-dom/cjs/react-dom.development.js:16455:3)\n    at Object.batchedUpdates$1 [as unstable_batchedUpdates] (node_modules/react-dom/cjs/react-dom.development.js:16664:7)\n    at /Users/kotomi/Development/code/Mod5/crud-lab/node_modules/react-dom/cjs/react-dom-test-utils.development.js:998:14\n    at Object.simulateEvent (node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:252:15)\n    at ReactWrapper.<anonymous> (node_modules/enzyme/build/ReactWrapper.js:868:29)\n    at ReactWrapper.single (node_modules/enzyme/build/ReactWrapper.js:1534:25)\n    at ReactWrapper.simulate (node_modules/enzyme/build/ReactWrapper.js:867:14)\n    at Context.<anonymous> (test/restaurants-test.js:151:18)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'filter' of undefined"
      }
    },
    {
      "title": "displays the ReviewInput component as a child of each Restaurant Component",
      "fullTitle": "ReviewInput Component displays the ReviewInput component as a child of each Restaurant Component",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has two text input fields, one for review input, and another for submitting",
      "fullTitle": "ReviewInput Component has two text input fields, one for review input, and another for submitting",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an initial state with text key set to empty string",
      "fullTitle": "ReviewInput Component has an initial state with text key set to empty string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "changes the component state with an onChange event",
      "fullTitle": "ReviewInput Component changes the component state with an onChange event",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "adds a review to the store when the form is submitted",
      "fullTitle": "ReviewInput Component adds a review to the store when the form is submitted",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "updates the state of the store after submitting the form",
      "fullTitle": "ReviewInput Component updates the state of the store after submitting the form",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "sets a property of restaurantId on the review input component from the parent components id",
      "fullTitle": "ReviewInput Component sets a property of restaurantId on the review input component from the parent components id",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "associates the review with the restaurant with a foreign key on the review",
      "fullTitle": "ReviewInput Component associates the review with the restaurant with a foreign key on the review",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a child of the ReviewsContainer component",
      "fullTitle": "Reviews Component is a child of the ReviewsContainer component",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "displays a review for when it is associated with the restaurant",
      "fullTitle": "Reviews Component displays a review for when it is associated with the restaurant",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not display any review unassociated with the restaurant",
      "fullTitle": "Reviews Component does not display any review unassociated with the restaurant",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an unique id property that for each element",
      "fullTitle": "Reviews Component has an unique id property that for each element",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a button that dispatches a DELETE_REVIEW action when clicked",
      "fullTitle": "Reviews Component has a button that dispatches a DELETE_REVIEW action when clicked",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "updates the state of the store to remove the component",
      "fullTitle": "Reviews Component updates the state of the store to remove the component",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "updates the state of the store to remove the component",
      "fullTitle": "Restaurant Component with Redux updates the state of the store to remove the component",
      "duration": 35,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'filter' of undefined\n    at Reviews.render (src/components/reviews/Reviews.js:8:39)\n    at finishClassComponent (node_modules/react-dom/cjs/react-dom.development.js:13194:31)\n    at updateClassComponent (node_modules/react-dom/cjs/react-dom.development.js:13156:10)\n    at beginWork (node_modules/react-dom/cjs/react-dom.development.js:13825:14)\n    at performUnitOfWork (node_modules/react-dom/cjs/react-dom.development.js:15864:12)\n    at workLoop (node_modules/react-dom/cjs/react-dom.development.js:15903:24)\n    at renderRoot (node_modules/react-dom/cjs/react-dom.development.js:15943:7)\n    at performWorkOnRoot (node_modules/react-dom/cjs/react-dom.development.js:16561:22)\n    at performWork (node_modules/react-dom/cjs/react-dom.development.js:16483:7)\n    at performSyncWork (node_modules/react-dom/cjs/react-dom.development.js:16455:3)\n    at Object.batchedUpdates$1 [as unstable_batchedUpdates] (node_modules/react-dom/cjs/react-dom.development.js:16664:7)\n    at /Users/kotomi/Development/code/Mod5/crud-lab/node_modules/react-dom/cjs/react-dom-test-utils.development.js:998:14\n    at Object.simulateEvent (node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:252:15)\n    at ReactWrapper.<anonymous> (node_modules/enzyme/build/ReactWrapper.js:868:29)\n    at ReactWrapper.single (node_modules/enzyme/build/ReactWrapper.js:1534:25)\n    at ReactWrapper.simulate (node_modules/enzyme/build/ReactWrapper.js:867:14)\n    at Context.<anonymous> (test/restaurants-test.js:151:18)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'filter' of undefined"
      }
    }
  ],
  "passes": [
    {
      "title": "has an text input field",
      "fullTitle": "RestaurantInput has an text input field",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an initial state with text key set to empty string",
      "fullTitle": "RestaurantInput has an initial state with text key set to empty string",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "changes the component state with an onChange event",
      "fullTitle": "RestaurantInput changes the component state with an onChange event",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "updates the state of the store after submitting the form",
      "fullTitle": "RestaurantInput updates the state of the store after submitting the form",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "displays a list of restaurant components",
      "fullTitle": "Restaurants Component displays a list of restaurant components",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "displays the appropriate text",
      "fullTitle": "Restaurant Component displays the appropriate text",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders an li",
      "fullTitle": "Restaurant Component renders an li",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an unique id property for each element",
      "fullTitle": "RestaurantInput Component with Redux has an unique id property for each element",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has the restaurant as a prop",
      "fullTitle": "Restaurant Component with Redux has the restaurant as a prop",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a button that dispatches a DELETE_RESTAURANT action with the proper id when clicked",
      "fullTitle": "Restaurant Component with Redux has a button that dispatches a DELETE_RESTAURANT action with the proper id when clicked",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "displays the ReviewInput component as a child of each Restaurant Component",
      "fullTitle": "ReviewInput Component displays the ReviewInput component as a child of each Restaurant Component",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has two text input fields, one for review input, and another for submitting",
      "fullTitle": "ReviewInput Component has two text input fields, one for review input, and another for submitting",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an initial state with text key set to empty string",
      "fullTitle": "ReviewInput Component has an initial state with text key set to empty string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "changes the component state with an onChange event",
      "fullTitle": "ReviewInput Component changes the component state with an onChange event",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "adds a review to the store when the form is submitted",
      "fullTitle": "ReviewInput Component adds a review to the store when the form is submitted",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "updates the state of the store after submitting the form",
      "fullTitle": "ReviewInput Component updates the state of the store after submitting the form",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "sets a property of restaurantId on the review input component from the parent components id",
      "fullTitle": "ReviewInput Component sets a property of restaurantId on the review input component from the parent components id",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "associates the review with the restaurant with a foreign key on the review",
      "fullTitle": "ReviewInput Component associates the review with the restaurant with a foreign key on the review",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a child of the ReviewsContainer component",
      "fullTitle": "Reviews Component is a child of the ReviewsContainer component",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "displays a review for when it is associated with the restaurant",
      "fullTitle": "Reviews Component displays a review for when it is associated with the restaurant",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not display any review unassociated with the restaurant",
      "fullTitle": "Reviews Component does not display any review unassociated with the restaurant",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an unique id property that for each element",
      "fullTitle": "Reviews Component has an unique id property that for each element",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a button that dispatches a DELETE_REVIEW action when clicked",
      "fullTitle": "Reviews Component has a button that dispatches a DELETE_REVIEW action when clicked",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "updates the state of the store to remove the component",
      "fullTitle": "Reviews Component updates the state of the store to remove the component",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    }
  ]
}